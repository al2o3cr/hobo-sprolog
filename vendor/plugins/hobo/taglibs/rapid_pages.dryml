<def tag="base-page" attrs="title, full-title, doctype">
  <% full_title ||= "#{title} : #{app_name}" %>
  <doctype param version="&doctype || 'HTML 4.01 STRICT'"/>
  <html>
    <head param>
      <title param><%= full_title.gsub(/<.*?>/, '') %></title>
      <do param="stylesheets">
        <stylesheet name="reset"/>
        <stylesheet name="hobo-rapid"/>
        <stylesheet name="application"/>
      </do>

      <do param="scripts">
        <javascript param name="prototype, effects, dragdrop, controls, lowpro, hobo-rapid, application"/>
        <do param="fix-ie6"><%= "<!--[if lt IE 7]>" %><javascript name="IE7"/><%= "<![endif]-->" %></do>
        <hobo-rapid-javascripts param/>
      </do>
    </head>

    <body onload="Hobo.applyEvents();" param/>
  </html>
</def>


<def tag="simple-layout">
  <base-page merge>
    <body: param>
      <ajax-progress/>
      <header class="page-header" param>
        <heading param="app-name"><a href="#{base_url}/"><app-name/></a></heading>
        <live-search param if="&defined_route? :site_search"/>
        <nav param>
          <account-nav if="&Hobo::User.default_user_model" param/>
          <main-nav param/>
        </nav>
      </header>
      <section class="page-content" param="content">
        <flash-message param/>
        <flash-message type="error" param/>
        <header class="content-header" param="content-header"/>
        <section class="content-body" param="content-body"/>
        <footer class="content-footer" param="content-footer"/>
      </section>
      <footer class="page-footer" param/>
      <part-contexts-javascripts/>
    </body:>
  </base-page>
</def>


<def tag="aside-layout">
  <simple-layout merge>
  <body: class="aside-layout" param/>
    <content: param>
      <section class="main-content" param="main-content">
        <param-content for="content"/>
      </section>
      <aside class="aside-content" empty param/>
    </content:>
  </simple-layout>
</def>
      

<def tag="page" attrs="layout"><call-tag tag="#{layout || 'simple'}-layout" merge/></def>


<def tag="index-page">
  <set model="&this.try.member_class || self.model"/>
  <set model-name="&model.name.titleize"/>
  <page title="All #{type_name :with => model, :plural => true}" merge>
    <body: class="index-page #{type_id model}" param/>
    <content-header: param>
      <heading param><type-name with="&model" plural/></heading>
      <p class="note" param="count">
        <if>There <count prefix="are"/></if>
        <else>There aren't any <type-name lowercase plural/> yet.</else>
      </p>
    </content-header:>

    <content-body: param>
      <nav param="top-pagination-nav"><page-nav/></nav>
      
      <collection param><empty-message:></empty-message:></collection>
      
      <nav param="bottom-pagination-nav"><page-nav/></nav>
    </content-body>
    
    <content-footer: param>
      <a to="&model" action="new" param="new-link"/>
      <else>
        <if with="&model.user_new current_user">
          <section class="create-new">
            <h2>New <type-name/></h2>
            <form><field-list param="new-field-list"/><submit label="Create"/></form>
          </section>
        </if>
      </else>
    </content-footer:>
  </page>
</def>


<def tag="new-page">
  <page title="New #{type_name}" merge>
    <body: class="new-page #{type_name :dasherize => true}" param/>
    <content-header: param>
      <heading param>New <type-name title/></heading>
    </content-header>

    <content-body: param>
      <error-messages param/>

      <form param>
        <field-list param/>
        <div class="actions" param="actions">
          <submit label="Create #{type_name}" param/><do param="back-link"> or <a>Cancel</a></do>
        </div>
      </form>
    </content-body>
  </page>
</def>


<def tag="show-page" attrs="primary-collection">
  <set primary-collection-name="&(primary_collection || self.primary_collection_name).to_s" model="&this.class"/>
  <set boolean-fields="&model.columns.select {|c| c.type == :boolean }.*.name"/>
  <set skip-fields="&boolean_fields + [model.name_attribute, model.primary_content_attribute, model.creator_attribute, model.dependent_on.first].compact"/>
  <set flags="&boolean_fields.map {|f| f.titleize if this.send(f)}.compact.join(', ')"/>

  <page merge title="#{name :no_wrapper => true}">

    <body: class="show-page #{type_name :dasherize => true}" param/>

    <content-header: param>
      <if with="&this.dependent_on.reject{|x| x.is_a?(Hobo::User)}.first">
        <div class="container"><a>&laquo; <name/></a></div>
      </if>

      <heading param><this/></heading>

      <div class="flags"><flags/></div>
      
      <creation-details param/>
      <do field="&primary_collection_name" if="&primary_collection_name" param="primary-collection-count">
        <association-count class="primary-collection-count" part="primary-collection-count"/>
      </do>
                         
      <a action="edit" class="edit" if="&linkable?(:edit) && can_edit?" param="edit-link">Edit <type-name/></a>
    </content-header>
    
    <content-body: param>
      <primary-content param/>

      <field-list skip="&skip_fields" skip-associations="has_many" param/>

      <with-primary-collection name="&primary_collection_name" if="&primary_collection_name">
        <section class="primary-collection">
          <h2 param="primary-collection-title"><primary-collection-name.titleize/></h2>

          <do param="primary-collection">
            <collection part="primary-collection">
              <card:><delete-button: update="primary-collection-count"></delete-button:></card:>
            </collection>
          </do>

          <do with="&@this.send(primary_collection_name)">
            <if test="&can_create?" param="primary-collection-add">
              <nav class="new-link"><a action="new" if="&linkable?(:new) && can_create?"/></nav>
              <else>
                <section class="create-new" with="&new_for_current_user">
                  <h2>Add <A-or-An word="&primary_collection_name.singularize.titleize"/></h2>
                  <form update="primary-collection, primary-collection-count"
                        message="Adding #{primary_collection_name.singularize.titleize}..." reset-form>
                    <field-list skip="#{@this.class.reverse_reflection(@this.send(primary_collection_name).proxy_reflection.name).name}"
                                skip-associations="has_many" param="primary-collection-field-list"/>
                    <submit label="Add"/>
                  </form>
                </section>
              </else>
            </if>
          </do>
        </section>
      </with-primary-collection>
    </content-body:>

    <aside: param>
      <section class="preview-collections">
        <with-fields fields="&non_through_collections - [(primary_collection_name.to_sym unless primary_collection_name.blank?)]">
          <collection-preview class="#{this_field.dasherize}"/>
        </with-fields>
      </section>
    </aside:>

  </page>
</def>


<def tag="edit-page">
  <page merge>    
    <body: class="edit-page #{type_name :dasherize => true}" param/>
    <content-header: param>
      <heading param><if test="&this.respond_to? :name"><name/></if><else><type-name/></else></heading>
      <delete-button label="Remove This #{type_name}" param/>
    </content-header>

    <content-body: param>
      <error-messages param/>
      <form param>
        <field-list param/>
        <div class="actions" param="actions">
          <submit label="Save Changes" param/><do param="back-link"> or <a>Cancel</a></do>
        </div>
      </form>
          
    </content-body>
  </page>
</def>


<def tag="new-in-collection-page">
  <set association-name="&@association.origin_attribute.to_s"/>
  <page title="New #{type_name}" merge>
    <body: class="new-in-collection-page #{association_name.underscore.dasherize} #{type_name :dasherize => true}" param/>
    <content-header: param>
      <heading param>New <association-name.singularize.titleize/></heading>
      <sub-heading param>For: <a with="&@association.origin"/></sub-heading>
    </content-header>

    <content-body: param>
      <error-messages/>

      <form param>
        <field-list skip="#{@association.origin.class.reverse_reflection(association_name.to_sym).name}" param/>
        <div class="actions" param="actions">
          <submit label="Create #{association_name.singularize.titleize}" param/>
          <do param="back-link"> or <a with="&@association.origin">Cancel</a></do>
        </div>
      </form>
    </content-body>
  </page>
</def>


<def tag="show-collection-page">
  <% title = "#{this.origin_attribute.to_s.titleize} for #{name(:with => this.origin)}" %>
  <page title="&title" merge>
    <body: class="show-collection-page #{type_name(:with => this.origin)} #{type_name(:pluralize => true) rescue debugger}"
          param/>
    <content-header: param>
      <nav>Back to <a:origin/></nav>
      <heading><%= title %></heading>
      <sub-heading><count/></sub-heading>
    </content-header>

    <content-body: param>
      <nav param="top-pagination-nav"><page-nav/></nav>

      <card repeat/>
      
      <nav param="bottom-pagination-nav"><page-nav param/></nav>
      
      <nav if="&Hobo.simple_has_many_association?(this)" param="new-link">
        <a action="new"/>
      </nav>
    </content-body>
  </page>
</def>


<def tag="permission-denied-page" attrs="message">
  <% message ||= "That operation is not allowed" %>
  <page merge>
    <body: class="permission-denied"/>
    <content-header: param>
      <heading param><message/></heading>
    </content-header>
  </page>
</def>


<def tag="not-found-page" attrs="message">
  <% message ||= "The page you were looking for could not be found" %>
  <page merge>
    <body: class="not-found"/>
    <content-header: param>
      <heading param><message/></heading>
    </content-header>
  </page>
</def>


<def tag="doctype" attrs="version"><%=
  case version.upcase
    when "HTML 4.01 STRICT"
      '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" ' + 
        '"http://www.w3.org/TR/html4/strict.dtd">'
    when "HTML 4.01 TRANSITIONAL"
      '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" ' + 
        '"http://www.w3.org/TR/html4/loose.dtd">'
    when "XHTML 1.0 STRICT"
      '!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" ' + 
        '"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">'
    when "XHTML 1.0 TRANSITIONAL"
      '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ' + 
        '"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">'
    when "XHTML 1.1"
      '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" ' + 
        '"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">'
  end
%></def>


<def tag="stylesheet" attrs="name, media">
  <repeat with="&comma_split(name)">
    <link href="#{base_url}/stylesheets/#{this}.css" media="#{ media || 'all' }"
          rel="stylesheet" type="text/css" />
  </repeat>
</def>


<def tag="javascript" attrs="name">
  <if test="&name.is_a?(Symbol)">
    <%= javascript_include_tag name %>
  </if>
  <else>
    <repeat with="&comma_split(name)">
      <%= javascript_include_tag this %>
    </repeat>
  </else>
</def>


<def tag="flash-message" attrs="type">
  <% type = type ? type.to_sym : :notice %>
  <div class="flash #{type}" if="&flash[type]" merge-attrs><%= flash[type] %></div>
</def>


<def tag="ajax-progress">
  <div id="ajax-progress">
    <div>
      <span id="ajax-progress-text"></span>
    </div>
  </div>
</def>


<def tag="default-page-title"><%= t = this.to_s; ; "#{t.blank? ? '' : t + ' - '}#{app_name}" %></def>


<def tag="with-primary-collection" attrs="name"><%
  ivar = "@#{this.class.name.underscore}_#{name}"
    
  if (collection = instance_variable_get(ivar))
    %><do with="&collection" param="default"/><%
  else
    %><do field="&name" param="default"/><%
  end
%></def>
